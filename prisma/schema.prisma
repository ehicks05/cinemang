generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id            Int       @id
  cast          String
  certification String?
  director      String
  genreId       Int       @map("genre_id")
  imdbId        String?   @map("imdb_id")
  languageId    String    @map("language_id")
  overview      String
  posterPath    String    @map("poster_path")
  releasedAt    DateTime  @map("released_at") @db.Date
  runtime       Int
  title         String
  voteAverage   Float     @map("vote_average")
  voteCount     Int       @map("vote_count")
  updatedAt     DateTime? @updatedAt @map("updated_at") @db.Date

  watchProviders WatchProvider[]
  castCredits    CastCredit[]
  crewCredits    CrewCredit[]

  @@index([title])
  @@index([languageId])
  @@index([releasedAt])
  @@index([voteAverage])
  @@index([voteCount])
  @@map("movie")
}

model Person {
  id                 Int          @id
  imdbId             String?      @map("imdb_id")
  biography          String
  birthday           DateTime     @db.Date
  deathday           DateTime     @db.Date
  gender             String
  knownForDepartment String       @map("known_for_department")
  name               String
  placeOfBirth       String       @map("place_of_birth")
  popularity         Float
  profilePath        String       @map("profile_path")
  castCredits        CastCredit[]
  crewCredits        CrewCredit[]

  @@map("person")
}

model CastCredit {
  movie    Movie  @relation(fields: [movieId], references: [id])
  movieId  Int
  person   Person @relation(fields: [personId], references: [id])
  personId Int

  castId    Int    @map("cast_id")
  creditId  String @map("credit_id")
  character String
  order     Int

  @@id([movieId, personId])
  @@map("cast_credit")
}

model CrewCredit {
  movie    Movie  @relation(fields: [movieId], references: [id])
  movieId  Int
  person   Person @relation(fields: [personId], references: [id])
  personId Int

  creditId   String @map("credit_id")
  department String
  job        String

  @@id([movieId, personId])
  @@map("crew_credit")
}

model Genre {
  id   Int    @id
  name String

  @@map("genre")
}

model Language {
  id    String @id
  name  String
  count Int    @default(0)

  @@map("language")
}

model WatchProvider {
  provider_id      Int     @id
  display_priority Int
  provider_name    String
  logo_path        String
  count            Int     @default(0)
  movies           Movie[]

  @@map("watch_provider")
}
